import random
import time
import os

class DigitalPet:
    def __init__(self, name):
        self.name = name
        self.hunger = 5
        self.happiness = 5
        self.energy = 5
        self.is_alive = True

    def _clamp_stats(self):
        """–£–±–µ–∂–¥–∞–µ—Ç—Å—è, —á—Ç–æ –≤—Å–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ—Ç 0 –¥–æ 10."""
        self.hunger = max(0, min(10, self.hunger))
        self.happiness = max(0, min(10, self.happiness))
        self.energy = max(0, min(10, self.energy))

    def pass_time(self):
        """–í—Ä–µ–º—è –ø—Ä–æ—Ö–æ–¥–∏—Ç, –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –º–µ–Ω—è—é—Ç—Å—è."""
        self.hunger += 1
        self.happiness -= 0.5
        self.energy -= 1
        self._clamp_stats()
        if self.hunger >= 10 or self.happiness <= 0 or self.energy <= 0:
            self.is_alive = False

    def feed(self):
        if self.is_alive:
            self.hunger -= 3
            print(f"–í—ã –ø–æ–∫–æ—Ä–º–∏–ª–∏ {self.name}. –ù—è–º –Ω—è–º")
            self._clamp_stats()

    def play(self):
        if self.is_alive:
            if self.energy > 2:
                self.happiness += 2
                self.energy -= 1
                print(f"–í—ã –ø–æ–∏–≥—Ä–∞–ª–∏ —Å {self.name}. –ï–º—É –≤–µ—Å–µ–ª–æ")
                self._clamp_stats()
            else:
                print(f"{self.name} —Å–ª–∏—à–∫–æ–º —É—Å—Ç–∞–ª –¥–ª—è –∏–≥—Ä")

    def sleep(self):
        if self.is_alive:
            self.energy += 4
            self.hunger += 1
            print(f"üí§ {self.name} –∫—Ä–µ–ø–∫–æ —Å–ø–∏—Ç...")
            time.sleep(2)
            self._clamp_stats()

    def status(self):
        """–í—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–∏—Ç–æ–º—Ü–∞"""
        if not self.is_alive:
            return f"{self.name} –±–æ–ª—å—à–µ –Ω–µ—Ç —Å –Ω–∞–º–∏üíÄ"
        
        hunger_bar = "üü•" * int(self.hunger) + "‚¨ú" * (10 - int(self.hunger))
        happy_bar = "üü©" * int(self.happiness) + "‚¨ú" * (10 - int(self.happiness))
        energy_bar = "üü¶" * int(self.energy) + "‚¨ú" * (10 - int(self.energy))

        return f"""
        –ò–º—è: {self.name}
        –ì–æ–ª–æ–¥:    [{hunger_bar}] {self.hunger:.1f}/10
        –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: [{happy_bar}] {self.happiness:.1f}/10
        –≠–Ω–µ—Ä–≥–∏—è:   [{energy_bar}] {self.energy:.1f}/10
        """

def clear_screen():
    os.system('cls' if os.name == 'nt' else 'clear')
\
if __name__ == "__main__":
    pet_name = input("–î–∞–π—Ç–µ –∏–º—è –≤–∞—à–µ–º—É —Ü–∏—Ñ—Ä–æ–≤–æ–º—É –ø–∏—Ç–æ–º—Ü—É: ")
    pet = DigitalPet(pet_name)

    while pet.is_alive:
        clear_screen()
        print(pet.status())
        print("\n–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?")
        print("1. –ü–æ–∫–æ—Ä–º–∏—Ç—å")
        print("2. –ü–æ–∏–≥—Ä–∞—Ç—å")
        print("3. –£–ª–æ–∂–∏—Ç—å —Å–ø–∞—Ç—å")
        print("4. –ù–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å")

        choice = input("\n–í–∞—à –≤—ã–±–æ—Ä (1-4): ")

        if choice == '1':
            pet.feed()
        elif choice == '2':
            pet.play()
        elif choice == '3':
            pet.sleep()
        elif choice == '4':
            print("–í—Ä–µ–º—è passes by")
        else:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥.")

        pet.pass_time()
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")

    clear_screen()
    print(pet.status())

    print("–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞")
